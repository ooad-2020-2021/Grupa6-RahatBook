// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RahatBookAplikacija.Data;

namespace RahatBookAplikacija.Migrations
{
    [DbContext(typeof(RahatBookContext))]
    partial class RahatBookContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RahatBookAplikacija.Models.Gost", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("datumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Gost");
                });

            modelBuilder.Entity("RahatBookAplikacija.Models.KontaktInfo", b =>
                {
                    b.Property<int>("idSJ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idSJ");

                    b.ToTable("KontaktInfo");
                });

            modelBuilder.Entity("RahatBookAplikacija.Models.Login", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idKorisnika")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("RahatBookAplikacija.Models.Lokacija", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("drzava")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postanskiBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Lokacija");
                });

            modelBuilder.Entity("RahatBookAplikacija.Models.Popust", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idSJ")
                        .HasColumnType("int");

                    b.Property<DateTime>("krajObracuna")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("pocetakObracuna")
                        .HasColumnType("datetime2");

                    b.Property<double>("procenat")
                        .HasColumnType("float");

                    b.Property<DateTime>("zaRezervacijeDO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("zaRezervacijeOD")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Popust");
                });

            modelBuilder.Entity("RahatBookAplikacija.Models.Recenzija", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idSJ")
                        .HasColumnType("int");

                    b.Property<string>("komentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ocjena")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Recenzija");
                });

            modelBuilder.Entity("RahatBookAplikacija.Models.RegistrovaniKorisnik", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("datumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<int>("idLokacije")
                        .HasColumnType("int");

                    b.Property<string>("ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("RegistrovaniKorisnik");

                    b.HasDiscriminator<string>("Discriminator").HasValue("RegistrovaniKorisnik");
                });

            modelBuilder.Entity("RahatBookAplikacija.Models.Rezervacija", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dolazak")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ekskurzija")
                        .HasColumnType("bit");

                    b.Property<int>("idKorisnika")
                        .HasColumnType("int");

                    b.Property<int>("idSJ")
                        .HasColumnType("int");

                    b.Property<DateTime>("odlazak")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("RahatBookAplikacija.Models.SJSobe", b =>
                {
                    b.Property<int>("idSJ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idVrstaSobe")
                        .HasColumnType("int");

                    b.Property<int>("ukupanBrojSoba")
                        .HasColumnType("int");

                    b.Property<int>("ukupanBrojZauzetihSoba")
                        .HasColumnType("int");

                    b.HasKey("idSJ");

                    b.ToTable("SJSobe");
                });

            modelBuilder.Entity("RahatBookAplikacija.Models.SmjestajnaJedinica", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("brojZvjezdica")
                        .HasColumnType("int");

                    b.Property<int>("idKarakteristike")
                        .HasColumnType("int");

                    b.Property<int>("idLokacije")
                        .HasColumnType("int");

                    b.Property<int>("idUsluge")
                        .HasColumnType("int");

                    b.Property<string>("naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("SmjestajnaJedinica");
                });

            modelBuilder.Entity("RahatBookAplikacija.Models.Upit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("datumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datumOdgovora")
                        .HasColumnType("datetime2");

                    b.Property<int>("idOd")
                        .HasColumnType("int");

                    b.Property<int>("idZa")
                        .HasColumnType("int");

                    b.Property<string>("odgovor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pitanje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("procitan")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("Upit");
                });

            modelBuilder.Entity("RahatBookAplikacija.Models.VrstaSobe", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("brojGostiju")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("VrstaSobe");
                });

            modelBuilder.Entity("Uplata", b =>
                {
                    b.Property<int>("idRezervacije")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("brojRata")
                        .HasColumnType("int");

                    b.Property<int>("idPopusta")
                        .HasColumnType("int");

                    b.Property<int>("nacinPlacanja")
                        .HasColumnType("int");

                    b.Property<int>("sredstvoPlacanja")
                        .HasColumnType("int");

                    b.HasKey("idRezervacije");

                    b.ToTable("Uplata");
                });

            modelBuilder.Entity("RahatBookAplikacija.Models.Administrator", b =>
                {
                    b.HasBaseType("RahatBookAplikacija.Models.RegistrovaniKorisnik");

                    b.HasDiscriminator().HasValue("Administrator");
                });
#pragma warning restore 612, 618
        }
    }
}
